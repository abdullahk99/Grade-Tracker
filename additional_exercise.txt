== Roster ==

Context: any system that tracks members

Rosters keeps track of members, must be able to add new ones and
remove no-longer-relevant members.  Rosters must also be able to
display a list of all members.  Although the add, remove, and display
behaviours of rosters are essential, we cannot necessarily add the
details of how they work until we know what sort of roster we are
dealing with.

Design and implement a class for a roster.

== RunnerRoster ==

Context: a system for organizing a 5K running race.

When runners are added to the roster, they provide their email address
and their speed category.  A speed category indicates how quickly they
estimate that they can finish the race.  This allows organizers to
start the runners in groups of roughly equivalent running speed so
that faster runners aren't stuck behind slower runners.  The possible
speed categories are: under 20 minutes, under 30 minutes, under 40
minutes, and 40 minutes or over.  We need to be able display a list of
all runners, where each line has the form:
'Email: <runner_email>, Speed: <runner_speed>'

Design and implement a class for a runner roster, using class Roster.

== PatientRoster ==

Context: an appointment system for a doctor's office.

A patient roster tracks a doctor's patients, each of whom has an OHIP number,
family name, first name and gender.  The doctor has a limit on the number
of patients they can take.  The doctor may have a gender balance rule:
a limit on the difference between the number of male and female patients
they are willing to have.  When a the doctor tries to add a patient,
they will be successful only if the doctor is not at his or her
limit and the patient will not violate the doctor's gender balance rule.
Sometimes patients move, change doctors, or die, and in those cases they
need to be removed from the doctor's list.  We need to be able to
display a list of all patients of the form:
'First name: <name>, Last name: <last name>, OHIP: <ohip here>'
omitting gender (no need to remove duplicates where different
patients have the same first and last name).

Design and implement a class for a patient roster, using class Roster.

== ClassRoster ==

Context: a student records system like ROSI

A course roster has students in it. Each student is identified by a
unique student number. There is a limit on how many students can
register, and that limit is set when the course roster is created.
Students are allowed to add and drop the course.  We need to be able
to display a list of all students that simply lists their student
numbers, 1 per line.

Design and implement a class for a class roster, using class Roster.

== FlightRoster ==

Context: An airline reservation system

Each seat has a unique name, like "17C" and is either in business
class or economy, and all the seat names/classes are known when the
FlightRoster is created.  Passengers have booking IDs (a mix of letters and
numbers).  When they book (add) a seat, they request their preferred
class (business or economy) and are given any seat in that class. If
the class is full, their booking is unsuccessful.  Passengers on the
"No Fly List" may have their booking removed by CSIS.  This airline
gives passengers no choice about their specific seat.  We want to be
able to report on how full a flight is: the percentage of seats that
are booked in economy, in business class, and overall.

Design and implement a class for a flight roster, using class Roster.

== InventoryRoster ==

Context: an inventory system

An inventory tracks items that are for sale, each one at its own
price.  Items are identified by their item number, and they also have
a text description, such as "bath towel".  There are categories that
items belong to, such as "housewares" and "books".  We need to be able
to add new items, delete old items, and print a suitable price tag for
an item (you can decide exactly the format).  Sometimes an item is
discounted by a certain percentage.  We need to be able to compare two
items to see which is cheaper.

Design and implement a class for an inventory item, using class
Roster.
